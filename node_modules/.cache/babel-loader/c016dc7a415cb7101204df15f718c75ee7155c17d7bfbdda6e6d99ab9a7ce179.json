{"ast":null,"code":"var _jsxFileName = \"/Users/wastardy/Documents/studying/client_task_flow/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createBrowserHistory } from 'history';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport TasksService from './services/tasks.service';\nimport TasksStore from './stores/tasks.store';\nimport UserStore from './stores/user.store';\nimport AuthService from './services/auth.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst services = {};\nconst stores = {};\nstores.routerStore = new RouterStore();\nconst browserHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\nservices.tasksService = new TasksService(stores.routerStore);\nservices.authService = new AuthService();\nstores.tasksStore = new TasksStore(services.tasksService);\nstores.userStore = new UserStore(services.authService);\nconst Root = /*#__PURE__*/_jsxDEV(Provider, {\n  ...stores,\n  children: /*#__PURE__*/_jsxDEV(HashRouter, {\n    history: history,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"names":["React","ReactDOM","Provider","createBrowserHistory","RouterStore","syncHistoryWithStore","HashRouter","App","serviceWorker","TasksService","TasksStore","UserStore","AuthService","jsxDEV","_jsxDEV","services","stores","routerStore","browserHistory","history","tasksService","authService","tasksStore","userStore","Root","children","fileName","_jsxFileName","lineNumber","columnNumber","render","document","getElementById","unregister"],"sources":["/Users/wastardy/Documents/studying/client_task_flow/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport { createBrowserHistory } from 'history';\nimport { RouterStore, syncHistoryWithStore } from 'mobx-react-router';\nimport { HashRouter } from 'react-router-dom';\n\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport TasksService from './services/tasks.service';\nimport TasksStore from './stores/tasks.store';\nimport UserStore from './stores/user.store';\nimport AuthService from './services/auth.service';\n\n\nconst services = {};\nconst stores = {};\n\nstores.routerStore = new RouterStore();\nconst browserHistory = createBrowserHistory();\nconst history = syncHistoryWithStore(browserHistory, stores.routerStore);\n\nservices.tasksService = new TasksService(stores.routerStore);\nservices.authService = new AuthService();\n\nstores.tasksStore = new TasksStore(services.tasksService);\nstores.userStore = new UserStore(services.authService);\n\nconst Root = (\n  <Provider {...stores}>\n    <HashRouter history={history}>\n      <App />\n    </HashRouter>\n  </Provider>\n);\nReactDOM.render(Root, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,WAAW;AAChC,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,oBAAoB,QAAQ,SAAS;AAC9C,SAASC,WAAW,EAAEC,oBAAoB,QAAQ,mBAAmB;AACrE,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,OAAO,cAAc;AACrB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,KAAKC,aAAa,MAAM,iBAAiB;AAChD,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,UAAU,MAAM,sBAAsB;AAC7C,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,WAAW,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,MAAMC,QAAQ,GAAG,CAAC,CAAC;AACnB,MAAMC,MAAM,GAAG,CAAC,CAAC;AAEjBA,MAAM,CAACC,WAAW,GAAG,IAAIb,WAAW,CAAC,CAAC;AACtC,MAAMc,cAAc,GAAGf,oBAAoB,CAAC,CAAC;AAC7C,MAAMgB,OAAO,GAAGd,oBAAoB,CAACa,cAAc,EAAEF,MAAM,CAACC,WAAW,CAAC;AAExEF,QAAQ,CAACK,YAAY,GAAG,IAAIX,YAAY,CAACO,MAAM,CAACC,WAAW,CAAC;AAC5DF,QAAQ,CAACM,WAAW,GAAG,IAAIT,WAAW,CAAC,CAAC;AAExCI,MAAM,CAACM,UAAU,GAAG,IAAIZ,UAAU,CAACK,QAAQ,CAACK,YAAY,CAAC;AACzDJ,MAAM,CAACO,SAAS,GAAG,IAAIZ,SAAS,CAACI,QAAQ,CAACM,WAAW,CAAC;AAEtD,MAAMG,IAAI,gBACRV,OAAA,CAACZ,QAAQ;EAAA,GAAKc,MAAM;EAAAS,QAAA,eAClBX,OAAA,CAACR,UAAU;IAACa,OAAO,EAAEA,OAAQ;IAAAM,QAAA,eAC3BX,OAAA,CAACP,GAAG;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACL,CACX;AACD5B,QAAQ,CAAC6B,MAAM,CAACN,IAAI,EAAEO,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;;AAEtD;AACA;AACA;AACAxB,aAAa,CAACyB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}